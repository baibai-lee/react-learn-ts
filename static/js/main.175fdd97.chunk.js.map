{"version":3,"sources":["serviceWorker.ts","hooks/action-type.ts","hooks/context.ts","hooks/actions.ts","hooks/index.ts","hooks/combine.ts","hooks/reducers.ts","containers/header.tsx","components/header.tsx","containers/list.tsx","components/list.tsx","containers/footer.tsx","components/footer.tsx","App.tsx","index.tsx"],"names":["Boolean","window","location","hostname","match","TYPES","Context","createContext","defaultData","todolist","donelist","todoFlags","actionCreaters","list","type","INIT_TODO","data","INIT_DONE","INIT_TODO_FLAGS","item","ADD_ITEM_TO_TODO","ADD_ITEM_TO_DONE","ADD_ITEM_TO_TODO_FROM_DONE","index","DEL_ITEM_FROM_TODO","DEL_ITEM_FROM_DONE","arr","UPDATE_TODO_FLAGS","UPDATE_TODO","CLEARALL","reducers","state","arguments","length","undefined","action","Object","keys","reduce","nextState","key","combineReducers","concat","toConsumableArray","filter","wrapHeader","WrappedComponent","newComponent","_React$Component","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","inherits","createClass","value","context","_this$context$actions","actions","addItemToTodo","updateTodoFlags","react_default","a","createElement","React","Component","contextType","props","_useState","useState","_useState2","slicedToArray","todoInput","setTodoInput","className","onSubmit","event","trim","alert","currnetFlags","preventDefault","placeholder","onChange","target","wrapList","_this$context$data","initTodo","initDone","initTodoFlags","addItemToDone","reAddItemToTodo","delItemFromTodo","delItemFromDone","updateTodo","todoItemValue","setTodoItemValue","toggleShowSpanAndInput","currentFlags","handleTodoContentInputChange","currentTarget","useEffect","localTodolist","JSON","parse","String","localStorage","getItem","localDonelist","localTodoFlags","Array","fill","error","console","log","setItem","stringify","map","draggable","checked","readOnly","onClick","currentItem","pop","handleTodoChange","style","width","handleTodoContentClick","autoFocus","onBlur","currentArr","handleTodoContentBlur","handleTodoDel","handleDoneChange","handleDoneDel","warpFooter","clearAll","href","App","_useReducer","useReducer","_useReducer2","dispatch","Provider","containers_header","containers_list","containers_footer","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.175fdd97.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","enum TYPES {\n    // 增删改查\n\n    // 初始化\n    INIT_TODO = 'INIT_TODO',\n    INIT_DONE = 'INIT_DONE',\n\n    // 向todo增加一条\n    ADD_ITEM_TO_TODO = 'ADD_ITEM_TO_TODO',\n    ADD_ITEM_TO_TODO_FROM_DONE = 'ADD_ITEM_TO_TODO_FROM_DONE',\n\n    // 更新todo\n    UPDATE_TODO = 'UPDATE_TODO',\n\n    // 向done增加一条\n    ADD_ITEM_TO_DONE = 'ADD_ITEM_TO_DONE',\n    // 从todo删除一条\n    DEL_ITEM_FROM_TODO = 'DEL_ITEM_FROM_TODO',\n    // 从done删除一条\n    DEL_ITEM_FROM_DONE = 'DEL_ITEM_FROM_DONE',\n    // 清除全部\n    CLEARALL = 'CLEARALL',\n\n    // 更新todo的展示标记\n    INIT_TODO_FLAGS = 'INIT_TODO_FLAGS',\n    UPDATE_TODO_FLAGS = 'UPDATE_TODO_FLAGS',\n}\n\nexport default TYPES","import { createContext } from 'react'\nexport const Context = createContext({})","import TYPES from './action-type'\n\nexport const initTodo = (list: string[]) => ({ type: TYPES.INIT_TODO, data: list })\nexport const initDone = (list: string[]) => ({ type: TYPES.INIT_DONE, data: list })\nexport const initTodoFlags = (list: boolean[]) => ({ type: TYPES.INIT_TODO_FLAGS, data: list })\n\nexport const addItemToTodo = (item: string) => ({ type: TYPES.ADD_ITEM_TO_TODO, data: item })\nexport const addItemToDone = (item: string) => ({ type: TYPES.ADD_ITEM_TO_DONE, data: item })\nexport const reAddItemToTodo = (item: string) => ({ type: TYPES.ADD_ITEM_TO_TODO_FROM_DONE, data: item })\n\nexport const delItemFromTodo = (index: number) => ({ type: TYPES.DEL_ITEM_FROM_TODO, data: index })\nexport const delItemFromDone = (index: number) => ({ type: TYPES.DEL_ITEM_FROM_DONE, data: index })\n\nexport const updateTodoFlags = (arr: boolean[]) => ({ type: TYPES.UPDATE_TODO_FLAGS, data: arr })\nexport const updateTodo = (arr: string[]) => ({ type: TYPES.UPDATE_TODO, data: arr })\n\nexport const clearAll = () => ({ type: TYPES.CLEARALL, data: null })","// import TYPES from './types'\n\n// import { todolistContext, donelistContext, todoFlagsContext, } from './context'\nimport { Context } from './context'\nimport {\n    todolistReducer as todolist,\n    donelistReducer as donelist,\n    todoFlagsReducer as todoFlags\n} from './reducers'\n\nimport {\n    initTodo, initDone, initTodoFlags,\n    addItemToTodo, addItemToDone, reAddItemToTodo,\n    delItemFromTodo, delItemFromDone,\n    updateTodoFlags, updateTodo, clearAll,\n} from './actions'\n\n// eslint-disable-next-line\nimport { combine, combineReducers } from './combine'\n\ninterface defaultData {\n    todolist: string[]\n    donelist: string[]\n    todoFlags: boolean[]\n}\n\nconst defaultData: defaultData = {\n    todolist: [],\n    donelist: [],\n    todoFlags: []\n}\n\nconst actionCreaters = {\n    initTodo, initDone, initTodoFlags,\n    addItemToTodo, addItemToDone, reAddItemToTodo,\n    delItemFromTodo, delItemFromDone,\n    updateTodoFlags, updateTodo, clearAll,\n}\n\n// 应该使reducer和对应的 默认数据以及state同名 否则 在多次初始化中会出现特殊的问题\n// const reducers = combine({ todolist, donelist, todoFlags, })\nconst reducers = combineReducers({ todolist, donelist, todoFlags, })\n\nexport {\n    Context,\n    reducers,\n    defaultData,\n    actionCreaters\n}","import TYPES from './action-type'\n\n// interface State {\n//     [propName: string]: string[] | boolean[]\n// }\n\ntype State = any\ninterface Action { type: TYPES, data: null | number | string | string[] | boolean[] }\ninterface Store { [propName: string]: State }\ninterface Reducer { (preState: State, action: Action): State }\ninterface Reducers { [propName: string]: Reducer }\ninterface ICombineReducers { (reducers: Reducers): (state: Store, action: Action) => Store }\n\nexport const combineReducers: ICombineReducers = (reducers) => {\n\n    return (state: any = {}, action: Action) => {\n\n        return Object.keys(reducers).reduce(\n            (\n                nextState: { [propName: string]: State },\n                key: string): { [propName: string]: State } => {\n\n                //key: count,key\n                //state[key]:当前遍历的reducer先前的state值\n                //nextState[key]:当前遍历的reducer变化后的state值\n                nextState[key] = reducers[key](state[key], action);\n                return nextState;\n            }, {})\n    };\n};\n\nexport const combine = (reducers: Reducers) => {\n    // const defaultData: Store = { todolist: [], donelist: [], todoFlags: [] }\n\n    return (state: any = {}, action: Action) => {\n        // 每次都返回一个新的rootstate\n        let store: any = {};\n        for (let key in reducers) {\n            // 把每个子reducer的state 赋值给rootState相应的属性上\n            store[key] = reducers[key](state[key], action);\n        }\n        return store;\n    }\n}","import TYPES from './action-type'\n\nfunction todolistReducer(state: string[], action: { type: TYPES, data: any }) {\n    switch (action.type) {\n        case TYPES.INIT_TODO: {\n            // console.log(TYPES.INIT_TODO)\n            return action.data\n        }\n        case TYPES.ADD_ITEM_TO_TODO: {\n            // console.log(TYPES.ADD_ITEM_TO_TODO)\n            return [action.data, ...state]\n        }\n        case TYPES.ADD_ITEM_TO_TODO_FROM_DONE: {\n            // console.log(TYPES.ADD_ITEM_TO_TODO_FROM_DONE)\n            return [...state, action.data]\n        }\n        case TYPES.DEL_ITEM_FROM_TODO: {\n            // console.log(TYPES.DEL_ITEM_FROM_TODO)\n            return state.filter((item, index) => index !== action.data)\n        }\n        case TYPES.UPDATE_TODO: {\n            // console.log(TYPES.UPDATE_TODO)\n            return action.data\n        }\n        case TYPES.CLEARALL: {\n            // console.log(TYPES.CLEARALL)\n            return []\n        }\n        default: return state\n    }\n};\n\nfunction donelistReducer(state: string[], action: { type: any, data: any }) {\n    switch (action.type) {\n        case TYPES.INIT_DONE: {\n            return action.data\n        }\n        case TYPES.ADD_ITEM_TO_DONE: {\n            return [action.data, ...state]\n        }\n        case TYPES.DEL_ITEM_FROM_DONE: {\n            return state.filter((item, index) => index !== action.data)\n        }\n        case TYPES.CLEARALL: {\n            // console.log(TYPES.CLEARALL)\n            return []\n        }\n        default: return state\n    }\n}\n\nfunction todoFlagsReducer(state: boolean[], action: { type: any, data: any }) {\n    switch (action.type) {\n        case TYPES.INIT_TODO_FLAGS: {\n            return action.data\n        }\n        case TYPES.UPDATE_TODO_FLAGS: {\n            return action.data\n        }\n        default: return state\n    }\n}\n\nexport { todolistReducer, donelistReducer, todoFlagsReducer }","import React from 'react'\nimport Header from '../components/header'\nimport { Context } from '../hooks'\n\ninterface IProps {\n    todoFlags: boolean[],\n    addItemToTodo: (item: string) => void,\n    updateTodoFlags: (arr: boolean[]) => void\n}\n\nconst wrapHeader = (WrappedComponent: React.FC<IProps>) => {\n    class newComponent extends React.Component {\n        static contextType = Context\n\n        render() {\n            let { todoFlags } = this.context.data\n            let { addItemToTodo, updateTodoFlags } = this.context.actions\n            return <WrappedComponent {...{ todoFlags, addItemToTodo, updateTodoFlags }} />\n        }\n    }\n\n    return newComponent\n\n}\n\nexport default wrapHeader(Header)","import React, { useState, ChangeEvent, FormEvent } from 'react'\n\ninterface IProps {\n    todoFlags: boolean[],\n    addItemToTodo: (item: string) => void,\n    updateTodoFlags: (arr: boolean[]) => void\n}\n\nconst Header: React.FC<IProps> = props => {\n    const { todoFlags, addItemToTodo, updateTodoFlags } = props\n\n    const [todoInput, setTodoInput] = useState('')\n\n    const handleChange = (event: ChangeEvent<HTMLInputElement>) => {\n        setTodoInput(event.target.value)\n    }\n\n    const handleSubmit = (event: FormEvent<HTMLFormElement>) => {\n        // 取出input中的值\n        let item = todoInput.trim()\n\n        // 为空则退出\n        if (!item) return alert('不可以输入空值哦~')\n\n        // 更新todoflags\n        let currnetFlags = [true, ...todoFlags]\n        updateTodoFlags(currnetFlags)\n        // 添加到todolist中\n        addItemToTodo(item)\n\n        // 输入框置空\n        setTodoInput('')\n        // 阻止默认行为\n        event.preventDefault()\n    }\n\n    return (\n        <header>\n            <section className=\"header-form\">\n                <form onSubmit={handleSubmit}>\n                    <label>TodoList</label>\n                    <input type=\"text\" placeholder=\" 添加todo\" value={todoInput} onChange={handleChange} />\n                </form>\n            </section>\n        </header>\n    )\n}\n\nexport default Header","import React from 'react'\nimport List from '../components/list'\nimport { Context } from '../hooks'\n\ninterface IProps {\n    todolist: Array<string>,\n    donelist: Array<string>,\n    todoFlags: boolean[],\n\n    initTodo: (list: string[]) => void,\n    initDone: (list: string[]) => void,\n    initTodoFlags: (arr: boolean[]) => void,\n\n    addItemToDone: (item: string) => void,\n    reAddItemToTodo: (item: string) => void,\n\n    delItemFromTodo: (index: number) => void,\n    delItemFromDone: (index: number) => void,\n\n    updateTodo: (arr: string[]) => void,\n    updateTodoFlags: (arr: boolean[]) => void,\n}\n\nconst wrapList = (WrappedComponent: React.FC<IProps>) => {\n    class newComponent extends React.Component {\n        static contextType = Context\n\n        render() {\n            let { todolist, donelist, todoFlags } = this.context.data\n            let { initTodo, initDone, initTodoFlags,\n                addItemToDone, reAddItemToTodo,\n                delItemFromTodo, delItemFromDone,\n                updateTodo, updateTodoFlags, } = this.context.actions\n\n            return <WrappedComponent {...{\n                todolist, donelist, todoFlags,\n                initTodo, initDone, initTodoFlags,\n                addItemToDone, reAddItemToTodo,\n                delItemFromTodo, delItemFromDone,\n                updateTodo, updateTodoFlags,\n            }} />\n        }\n    }\n\n    return newComponent\n}\n\nexport default wrapList(List)","import React, { useState, useEffect, ChangeEvent } from 'react'\n\ninterface IProps {\n    todolist: Array<string>,\n    donelist: Array<string>,\n    addItemToDone: (item: string) => void,\n    reAddItemToTodo: (item: string) => void,\n    delItemFromTodo: (index: number) => void,\n    delItemFromDone: (index: number) => void,\n    updateTodo: (arr: string[]) => void,\n    initTodoFlags: (arr: boolean[]) => void,\n    updateTodoFlags: (arr: boolean[]) => void,\n    todoFlags: boolean[],\n    initTodo: (list: string[]) => void,\n    initDone: (list: string[]) => void,\n}\n\nconst List: React.FC<IProps> = props => {\n\n    const [todoItemValue, setTodoItemValue] = useState('')\n\n    const { todolist, donelist, todoFlags,\n        initTodo, initDone, initTodoFlags,\n        addItemToDone, reAddItemToTodo,\n        delItemFromTodo, delItemFromDone,\n        updateTodo, updateTodoFlags,\n    } = props\n\n    const handleTodoDel = (index: number) => {\n        // 此处不可以使用event.target，会报错 EventTarget上没有className\n        delItemFromTodo(index)\n\n        // 同时更新flags\n        let currentFlags = [...todoFlags]\n        currentFlags.pop()\n        updateTodoFlags(currentFlags)\n    }\n\n    const handleDoneDel = (index: number) => {\n        delItemFromDone(index)\n    }\n\n    const handleTodoChange = (index: number) => {\n        // 添加至donelist\n        let currentItem = todolist[index]\n        addItemToDone(currentItem)\n\n        // 从todolist中删除\n        delItemFromTodo(index)\n\n        // 同时更新flags\n        let currentFlags = [...todoFlags]\n        currentFlags.pop()\n        updateTodoFlags(currentFlags)\n    }\n\n    const handleDoneChange = (index: number) => {\n        // 从done中删除之前要更新 todoflags，保证todo和todoflags的长度一致，否则会出现异常\n        let currentFlags = [...todoFlags, true]\n        updateTodoFlags(currentFlags)\n\n        let currentItem = donelist[index]\n        reAddItemToTodo(currentItem)\n        delItemFromDone(index)\n    }\n\n    const handleTodoContentClick = (index: number) => {\n        // 显示为input\n        toggleShowSpanAndInput(index)\n        // 更新input的内容\n        setTodoItemValue(todolist[index])\n    }\n\n    const handleTodoContentBlur = (index: number) => {\n        toggleShowSpanAndInput(index)\n\n        // 未变化就不触发action\n        if (todolist[index] === todoItemValue) return\n\n        let currentArr = [...todolist]\n        currentArr[index] = todoItemValue\n        updateTodo(currentArr)\n    }\n\n    // 抽取 handleTodoContentClick 和 handleTodoContentBlur 的公共部分进行封装\n    const toggleShowSpanAndInput = (index: number) => {\n        let currentFlags = [...todoFlags]\n        currentFlags[index] = !currentFlags[index]\n        updateTodoFlags(currentFlags)\n    }\n\n    const handleTodoContentInputChange = (event: ChangeEvent<HTMLInputElement>) => {\n        setTodoItemValue(event.currentTarget.value)\n    }\n\n    // 初始化显示\n    useEffect(() => {\n        try {\n            let localTodolist: string[] = JSON.parse(String(localStorage.getItem('todolist'))) || []\n            let localDonelist: string[] = JSON.parse(String(localStorage.getItem('donelist'))) || []\n\n            // 在此将list初始化显示为span\n            let localTodoFlags: boolean[] = new Array(localTodolist.length).fill(true)\n\n            initTodoFlags(localTodoFlags)\n            initTodo(localTodolist)\n            initDone(localDonelist)\n        } catch (error) {\n            console.log(error)\n        }\n        console.log('list mounted')\n    },\n        // eslint-disable-next-line\n        [])\n\n    // 完成更新后设置缓存\n    useEffect(() => {\n        localStorage.setItem('todolist', JSON.stringify(todolist))\n        localStorage.setItem('donelist', JSON.stringify(donelist))\n    })\n\n    useEffect(() => {\n        console.log('todolist.length :', todolist.length)\n    }, [todolist.length])\n\n    return (\n        <section className=\"main-list-container\">\n            <section className=\"main-list\">\n                <h2>正在进行<span className=\"listcount\">{todolist.length}</span></h2>\n                <ul>\n                    {\n                        todolist.map((item: string, index: number) =>\n                            (\n                                <li className=\"todolist\" key={index} draggable={true}>\n                                    <input type=\"checkbox\" checked={false} readOnly onClick={() => handleTodoChange(index)} />\n                                    {\n                                        todoFlags[index] ?\n                                            <span style={{ width: '400px' }} onClick={() => handleTodoContentClick(index)}>{item}</span>\n                                            :\n                                            <input type=\"text\" style={{ width: '400px' }}\n                                                autoFocus={true}\n                                                value={todoItemValue}\n                                                onChange={handleTodoContentInputChange}\n                                                onBlur={() => handleTodoContentBlur(index)}\n                                            />\n                                    }\n                                    {/* eslint-disable-next-line */}\n                                    <a onClick={() => handleTodoDel(index)}>-</a>\n                                </li>\n                            )\n                        )\n                    }\n                </ul>\n\n                <h2>已经完成<span className=\"listcount\">{donelist.length}</span></h2>\n                <ul>\n                    {\n                        donelist.map((item: string, index: number) =>\n                            (\n                                <li className=\"donelist\" key={index}>\n                                    <input type=\"checkbox\" checked={true} readOnly onClick={() => handleDoneChange(index)} />\n                                    <span>{item}</span>\n                                    {/* eslint-disable-next-line */}\n                                    <a onClick={() => handleDoneDel(index)}>-</a>\n                                </li>\n                            )\n                        )\n                    }\n                </ul>\n            </section>\n        </section>\n    )\n}\n\nexport default List","import React from 'react'\nimport Footer from '../components/footer'\nimport { Context } from '../hooks'\n\ninterface IProps {\n    clearAll: () => void\n}\n\nconst warpFooter = (WrappedComponent: React.FC<IProps>) => {\n    class newComponent extends React.Component {\n        static contextType = Context\n\n        render() {\n            let { clearAll } = this.context.actions\n            return <WrappedComponent {...{ clearAll }} />\n        }\n    }\n    return newComponent\n}\n\nexport default warpFooter(Footer)","import React from 'react'\ninterface IProps {\n    clearAll: () => void\n}\n\nconst Footer: React.FC<IProps> = props => {\n    const clearAll = () => { props.clearAll() }\n\n    return (\n        < footer >\n            <span>Copyright © 2019 lizhan1@xiaomi.com</span>\n            {/* eslint-disable-next-line */}\n            <span onClick={clearAll}><a href=\"#\">clear</a></span>\n        </footer >\n    )\n}\n\nexport default Footer\n","import React, { useReducer } from 'react';\nimport { Context, reducers, defaultData, actionCreaters } from './hooks'\n\nimport Header from './containers/header'\nimport List from './containers/list'\nimport Footer from './containers/footer';\n\nconst App: React.FC = () => {\n    const [data, dispatch] = useReducer(reducers, defaultData)\n\n    const initTodo = (list: string[]) => dispatch(actionCreaters.initTodo(list))\n    const initDone = (list: string[]) => dispatch(actionCreaters.initDone(list))\n    const initTodoFlags = (list: boolean[]) => dispatch(actionCreaters.initTodoFlags(list))\n\n    const addItemToTodo = (item: string) => dispatch(actionCreaters.addItemToTodo(item))\n    const addItemToDone = (item: string) => dispatch(actionCreaters.addItemToDone(item))\n    const reAddItemToTodo = (item: string) => dispatch(actionCreaters.reAddItemToTodo(item))\n\n    const delItemFromTodo = (index: number) => dispatch(actionCreaters.delItemFromTodo(index))\n    const delItemFromDone = (index: number) => dispatch(actionCreaters.delItemFromDone(index))\n\n    const updateTodo = (arr: string[]) => dispatch(actionCreaters.updateTodo(arr))\n    const updateTodoFlags = (arr: boolean[]) => dispatch(actionCreaters.updateTodoFlags(arr))\n\n    // 原本需要dispatch两次，分别更改todo和done，合并后仅需dispatch一次\n    const clearAll = () => dispatch(actionCreaters.clearAll())\n\n    const actions = {\n        initTodo, initDone, initTodoFlags,\n        addItemToTodo, addItemToDone, reAddItemToTodo,\n        delItemFromTodo, delItemFromDone,\n        updateTodoFlags, updateTodo, clearAll,\n    }\n\n    return (\n        <Context.Provider value={{ data, actions }}>\n            <div className=\"App\">\n                <Header />\n                <List />\n                <Footer />\n            </div>\n        </Context.Provider >\n    )\n};\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}